/* Generated By:JJTree: Do not edit this line. MKParserTreeConstants.java */

/****************************************************************************
 *
 * Copyright (C) 2004. The MITRE Corporation (http://www.mitre.org/). All Rights Reserved.
 * Consult the LICENSE file in the root of the distribution for terms and restrictions.
 *
 *       Release: 1.0
 *       Date: 24-August-2004
 *       Author: Carl Burke
 *
 *****************************************************************************/
package org.mitre.midiki.compiler.parser;

public interface MKParserTreeConstants
{
  public int JJTCOMPILATIONUNIT = 0;
  public int JJTNAME = 1;
  public int JJTDESIGNATOR = 2;
  public int JJTIDENTIFIER = 3;
  public int JJTVARIABLE = 4;
  public int JJTQUALIFIERLIST = 5;
  public int JJTDOTQUALIFIER = 6;
  public int JJTHASHQUALIFIER = 7;
  public int JJTEXPRESSION = 8;
  public int JJTASSIGNMENTOPERATOR = 9;
  public int JJTLOGICALEXPRESSION = 10;
  public int JJTLOGICALOPERATOR = 11;
  public int JJTRELATIONALEXPRESSION = 12;
  public int JJTRELATIONALOPERATOR = 13;
  public int JJTADDITIVEEXPRESSION = 14;
  public int JJTADDITIVEOPERATOR = 15;
  public int JJTMULTIPLICATIVEEXPRESSION = 16;
  public int JJTMULTIPLICATIVEOPERATOR = 17;
  public int JJTUNARYEXPRESSION = 18;
  public int JJTNEGATIONOPERATOR = 19;
  public int JJTPRIMARYEXPRESSION = 20;
  public int JJTLITERAL = 21;
  public int JJTINTEGERLITERAL = 22;
  public int JJTFLOATINGPOINTLITERAL = 23;
  public int JJTCHARACTERLITERAL = 24;
  public int JJTSTRINGLITERAL = 25;
  public int JJTARGUMENTS = 26;
  public int JJTARGUMENTLIST = 27;
  public int JJTEXPRESSIONS = 28;
  public int JJTEXPRESSIONLIST = 29;
  public int JJTSTATEMENTS = 30;
  public int JJTSTATEMENTLIST = 31;
  public int JJTSTATEMENT = 32;


  public String[] jjtNodeName = {
    "CompilationUnit",
    "Name",
    "Designator",
    "Identifier",
    "Variable",
    "QualifierList",
    "DotQualifier",
    "HashQualifier",
    "Expression",
    "AssignmentOperator",
    "LogicalExpression",
    "LogicalOperator",
    "RelationalExpression",
    "RelationalOperator",
    "AdditiveExpression",
    "AdditiveOperator",
    "MultiplicativeExpression",
    "MultiplicativeOperator",
    "UnaryExpression",
    "NegationOperator",
    "PrimaryExpression",
    "Literal",
    "IntegerLiteral",
    "FloatingPointLiteral",
    "CharacterLiteral",
    "StringLiteral",
    "Arguments",
    "ArgumentList",
    "Expressions",
    "ExpressionList",
    "Statements",
    "StatementList",
    "Statement",
  };
}
